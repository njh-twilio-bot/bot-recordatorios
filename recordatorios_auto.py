# =========================
# Bot de recordatorios con Twilio + Render
# √öltima depuraci√≥n: septiembre 26
# =========================

import os
import datetime
import schedule
import time
import random
from twilio.rest import Client
from dotenv import load_dotenv

# =========================
# 1. Cargar variables de entorno
# =========================
load_dotenv()  # Render inyecta las variables, pero lo dejamos por compatibilidad local

account_sid = os.getenv("TWILIO_ACCOUNT_SID")
auth_token = os.getenv("TWILIO_AUTH_TOKEN")
from_whatsapp_number = os.getenv("TWILIO_WHATSAPP_NUMBER")

# Lista de destinatarios
lista_numeros = [
    'whatsapp:+573004011292',  # Tu n√∫mero
    'whatsapp:+573132744436',  # CAR
]

# =========================
# 2. Verificaci√≥n de variables
# =========================
print(f"üöÄ Bot iniciado en Render a las {datetime.datetime.now()}")
print("üìã Variables de entorno detectadas en Render:")
print("TWILIO_ACCOUNT_SID:", account_sid[:6] + "..." if account_sid else None)
print("TWILIO_AUTH_TOKEN:", auth_token[:6] + "..." if auth_token else None)
print("TWILIO_WHATSAPP_NUMBER:", from_whatsapp_number)
print("Lista de n√∫meros destino:", lista_numeros)

if not all([account_sid, auth_token, from_whatsapp_number]):
    raise ValueError("‚ùå Error: Falta alguna variable de entorno obligatoria.")

# =========================
# 3. Cliente Twilio
# =========================
client = Client(account_sid, auth_token)

# =========================
# 4. Funci√≥n para enviar recordatorio
# =========================
def enviar_recordatorio():
    try:
        with open("mensajes.txt", "r", encoding="utf-8") as file:
            mensajes = [line.strip() for line in file if line.strip()]
        
        if not mensajes:
            print("‚ö†Ô∏è El archivo 'mensajes.txt' est√° vac√≠o.")
            return

        mensaje = random.choice(mensajes)

        for numero in lista_numeros:
            message = client.messages.create(
                from_=from_whatsapp_number,
                body=mensaje,
                to=numero
            )
            print(f"‚úÖ Mensaje enviado a {numero}. SID: {message.sid[:6]}...")

    except Exception as e:
        print(f"‚ùå Error al enviar el mensaje: {e}")

# =========================
# 5. Programaci√≥n de tareas
# =========================
# Para pruebas r√°pidas: cada minuto
# schedule.every(1).minutes.do(enviar_recordatorio)

# Para producci√≥n: a las 00:53
schedule.every().day.at("00:53").do(enviar_recordatorio)

print("‚è≥ Bot activo. Enviar√° recordatorios a la hora programada...")

# =========================
# 6. Mantener el bot corriendo
# =========================
while True:
    schedule.run_pending()
    time.sleep(10)
